name: Windows Build (Manual Version)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Aseprite version (e.g., 1.3.6)'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, x86]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Restore sccache cache
      - name: Cache sccache directory
        uses: actions/cache@v3
        with:
          path: |
            %USERPROFILE%\.cache\sccache
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-sccache-

      # Start the sccache service
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.2.0

      - name: Set version
        id: version
        shell: pwsh
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $env:GITHUB_ENV

      - name: Check if already built
        id: check_built
        shell: pwsh
        run: |
          $version = $env:VERSION
          $archKey = if ("${{ matrix.arch }}" -eq "x64") { "64bit" } else { "32bit" }
          $jsonPath = Join-Path $env:GITHUB_WORKSPACE 'BUILDS.json'
          if (Test-Path $jsonPath) {
            $json = Get-Content $jsonPath | ConvertFrom-Json
            if ($json.$version -and $json.$version.$archKey) {
              Write-Host "Version $version $archKey already built, skipping build."
              echo "SKIP=true" >> $env:GITHUB_ENV
            }
          }

      - name: Download Source
        if: env.SKIP != 'true'
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/aseprite/aseprite/releases/download/v$($env:VERSION)/Aseprite-v$($env:VERSION)-Source.zip" -OutFile "Source.zip"

      - name: Unzip Source
        if: env.SKIP != 'true'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path C:\aseprite -Force | Out-Null
          Expand-Archive -Path "Source.zip" -DestinationPath C:\aseprite -Force

      - name: Download Skia
        if: env.SKIP != 'true'
        shell: pwsh
        run: |
          $url = if ("${{ matrix.arch }}" -eq "x64") {
            'https://github.com/aseprite/skia/releases/latest/download/Skia-Windows-Release-x64.zip'
          } else {
            'https://github.com/aseprite/skia/releases/latest/download/Skia-Windows-Release-x86.zip'
          }
          Invoke-WebRequest -Uri $url -OutFile "Skia.zip"

      - name: Unzip Skia
        if: env.SKIP != 'true'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path C:\deps\skia -Force | Out-Null
          Expand-Archive -Path "Skia.zip" -DestinationPath C:\deps\skia -Force

      - name: Setup MSVC
        if: env.SKIP != 'true'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Configure build
        if: env.SKIP != 'true'
        shell: pwsh
        run: |
          $archDir = if ("${{ matrix.arch }}" -eq "x64") { "Release-x64" } else { "Release-x86" }
          Push-Location C:\aseprite
          New-Item -ItemType Directory -Path build -Force | Out-Null
          Set-Location build
          cmake `
            -G Ninja `
            -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DLAF_BACKEND=skia `
            -DSKIA_DIR=C:\deps\skia `
            -DSKIA_LIBRARY_DIR=C:\deps\skia\out\$archDir `
            -DSKIA_LIBRARY=C:\deps\skia\out\$archDir\skia.lib `
            -DCMAKE_C_COMPILER_LAUNCHER=sccache `
            -DCMAKE_CXX_COMPILER_LAUNCHER=sccache `
            -DCMAKE_C_FLAGS="/FS" `
            -DCMAKE_CXX_FLAGS="/FS"

      - name: Build aseprite
        if: env.SKIP != 'true'
        shell: pwsh
        run: |
          Push-Location C:\aseprite\build
          ninja aseprite

      - name: Upload bin directory
        if: env.SKIP != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: aseprite-${{ env.VERSION }}-windows-${{ matrix.arch }}
          path: C:\aseprite\build\bin

      - name: Update BUILDS.json and push
        if: matrix.arch == 'x64' && env.SKIP != 'true'
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $version = $env:VERSION
          $archKey = '64bit'
          if ("${{ matrix.arch }}" -ne "x64") { $archKey = '32bit' }
          $artifactBase = "aseprite-$version-windows-${{ matrix.arch }}"
          $jsonPath = Join-Path $env:GITHUB_WORKSPACE 'BUILDS.json'
          Push-Location $env:GITHUB_WORKSPACE
          if (Test-Path $jsonPath) {
            $json = Get-Content $jsonPath | ConvertFrom-Json
          } else {
            $json = @{}
          }
          if (-not $json.$version) {
            $json | Add-Member NoteProperty -Name $version -Value @{}
          }
          $json.$version | Add-Member NoteProperty -Name $archKey -Value $artifactBase -Force
          $json | ConvertTo-Json -Depth 10 | Set-Content $jsonPath

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add BUILDS.json
          git commit -m "Update BUILDS.json [skip ci]"
          git push "https://x-access-token:${env:GITHUB_TOKEN}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref_name }}
